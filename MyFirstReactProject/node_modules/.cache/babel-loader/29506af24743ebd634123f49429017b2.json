{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\DIMA\\\\Desktop\\\\people\\\\ReactTestTask-MaxUser99-patch-1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\DIMA\\\\Desktop\\\\people\\\\ReactTestTask-MaxUser99-patch-1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\DIMA\\\\Desktop\\\\people\\\\ReactTestTask-MaxUser99-patch-1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\DIMA\\\\Desktop\\\\people\\\\ReactTestTask-MaxUser99-patch-1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\DIMA\\\\Desktop\\\\people\\\\ReactTestTask-MaxUser99-patch-1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\DIMA\\\\Desktop\\\\people\\\\ReactTestTask-MaxUser99-patch-1\\\\src\\\\components\\\\pages\\\\Main.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { startLoading } from \"../../reduxStuff/actions\";\nimport List from \"../List\";\n\nvar _Main =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_Main, _React$Component);\n\n  function _Main() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, _Main);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(_Main)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      stringPattern: \"\"\n    };\n\n    _this.inputChanged = function (e) {\n      _this.setState({\n        stringPattern: e.target.value.toLowerCase()\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(_Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          dataFetched = _this$props.dataFetched,\n          isFetching = _this$props.isFetching,\n          getPersons = _this$props.getPersons;\n\n      if (!(dataFetched || isFetching)) {\n        getPersons();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var stringPattern = this.state.stringPattern;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onChange: this.inputChanged,\n        type: \"text\",\n        className: \"form-control\",\n        id: \"searchInput\",\n        placeholder: \"Enter whom are you looking for...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(List, {\n        stringPattern: stringPattern,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return _Main;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getPersons: function getPersons() {\n      return dispatch(startLoading());\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    dataFetched: state.dataFetched,\n    isFetching: state.isFetching\n  };\n};\n\nvar Main = connect(mapStateToProps, mapDispatchToProps)(_Main);\nexport default Main;","map":{"version":3,"sources":["C:\\Users\\DIMA\\Desktop\\people\\ReactTestTask-MaxUser99-patch-1\\src\\components\\pages\\Main.js"],"names":["React","connect","startLoading","List","_Main","state","stringPattern","inputChanged","e","setState","target","value","toLowerCase","props","dataFetched","isFetching","getPersons","Component","mapDispatchToProps","dispatch","mapStateToProps","Main"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,IAAP,MAAiB,SAAjB;;IAEMC,K;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,aAAa,EAAE;AADT,K;;UAWRC,Y,GAAe,UAACC,CAAD,EAAO;AACpB,YAAKC,QAAL,CAAc;AACZH,QAAAA,aAAa,EAAEE,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,WAAf;AADH,OAAd;AAGD,K;;;;;;;wCAXmB;AAAA,wBAC8B,KAAKC,KADnC;AAAA,UACVC,WADU,eACVA,WADU;AAAA,UACGC,UADH,eACGA,UADH;AAAA,UACeC,UADf,eACeA,UADf;;AAElB,UAAI,EAAEF,WAAW,IAAIC,UAAjB,CAAJ,EAAkC;AAChCC,QAAAA,UAAU;AACX;AACF;;;6BAQQ;AAAA,UACCV,aADD,GACmB,KAAKD,KADxB,CACCC,aADD;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,QAAQ,EAAE,KAAKC,YADjB;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,SAAS,EAAC,cAHZ;AAIE,QAAA,EAAE,EAAC,aAJL;AAKE,QAAA,WAAW,EAAC,mCALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQE,oBAAC,IAAD;AAAM,QAAA,aAAa,EAAED,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF;AAYD;;;;EAhCiBN,KAAK,CAACiB,S;;AAmC1B,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtCH,IAAAA,UAAU,EAAE;AAAA,aAAMG,QAAQ,CAACjB,YAAY,EAAb,CAAd;AAAA;AAD0B,GAAL;AAAA,CAAnC;;AAIA,IAAMkB,eAAe,GAAG,SAAlBA,eAAkB,CAAAf,KAAK;AAAA,SAAK;AAChCS,IAAAA,WAAW,EAAET,KAAK,CAACS,WADa;AAEhCC,IAAAA,UAAU,EAAGV,KAAK,CAACU;AAFa,GAAL;AAAA,CAA7B;;AAKA,IAAMM,IAAI,GAAGpB,OAAO,CAACmB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6Cd,KAA7C,CAAb;AACA,eAAeiB,IAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { startLoading } from \"../../reduxStuff/actions\";\r\nimport List from \"../List\";\r\n\r\nclass _Main extends React.Component {\r\n  state = {\r\n    stringPattern: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { dataFetched, isFetching, getPersons } = this.props;\r\n    if (!(dataFetched || isFetching)) {\r\n      getPersons();\r\n    }\r\n  }\r\n\r\n  inputChanged = (e) => {\r\n    this.setState({\r\n      stringPattern: e.target.value.toLowerCase()\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { stringPattern } = this.state;\r\n    return (\r\n      <div>\r\n        <input\r\n          onChange={this.inputChanged}\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"searchInput\"\r\n          placeholder=\"Enter whom are you looking for...\"\r\n        />\r\n        <List stringPattern={stringPattern} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getPersons: () => dispatch(startLoading())\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  dataFetched: state.dataFetched,\r\n  isFetching:  state.isFetching\r\n});\r\n\r\nconst Main = connect(mapStateToProps, mapDispatchToProps)(_Main);\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}