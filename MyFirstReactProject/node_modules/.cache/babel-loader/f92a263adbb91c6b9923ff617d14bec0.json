{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\DIMA\\\\Desktop\\\\ReactTestTask-MaxUser99-patch-1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\DIMA\\\\Desktop\\\\ReactTestTask-MaxUser99-patch-1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { constants } from \"./actions\";\nvar initialState = {\n  isAuthentificated: false,\n  user: {\n    login: \"\",\n    password: \"\"\n  },\n  data: [],\n  isFetching: false,\n  dataFetched: false,\n  fetchError: null\n};\n\nvar mainReducer = function mainReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case constants.AUTHENTICATE:\n      return _objectSpread({}, state, {\n        isAuthentificated: true,\n        user: action.payload\n      });\n\n    case constants.SET_DATA:\n      return _objectSpread({}, state, {\n        data: [].concat(_toConsumableArray(state.data), _toConsumableArray(action.payload))\n      });\n\n    case constants.START_LOADING:\n      return _objectSpread({}, state, {\n        isFetching: true\n      });\n\n    case constants.FINISH_LOADING:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        dataFetched: true\n      });\n\n    case constants.LOADING_ERROR:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        dataFetched: true,\n        fetchError: action.payload\n      });\n\n    case constants.FETCH_PROPS:\n      return state;\n\n    case constants.SET_PROP:\n      var payload = action.payload;\n      var persons = state.data.slice();\n      var person = persons.find(function (e) {\n        return e.name === payload.personName;\n      });\n      var index = persons.indexOf(person); // if (!person.hasOwnProperty(payload.prop)) {\n      //   return state;\n      // }\n\n      person[payload.prop] = payload.val;\n      persons[index] = person;\n      return _objectSpread({}, state, {\n        data: persons\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default mainReducer;","map":{"version":3,"sources":["C:\\Users\\DIMA\\Desktop\\ReactTestTask-MaxUser99-patch-1\\src\\reduxStuff\\reducer.js"],"names":["constants","initialState","isAuthentificated","user","login","password","data","isFetching","dataFetched","fetchError","mainReducer","state","action","type","AUTHENTICATE","payload","SET_DATA","START_LOADING","FINISH_LOADING","LOADING_ERROR","FETCH_PROPS","SET_PROP","persons","slice","person","find","e","name","personName","index","indexOf","prop","val"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,WAA1B;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,iBAAiB,EAAE,KADA;AAEnBC,EAAAA,IAAI,EAAe;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAFA;AAGnBC,EAAAA,IAAI,EAAe,EAHA;AAInBC,EAAAA,UAAU,EAAS,KAJA;AAKnBC,EAAAA,WAAW,EAAQ,KALA;AAMnBC,EAAAA,UAAU,EAAS;AANA,CAArB;;AASA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBV,YAAyB;AAAA,MAAXW,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,SAAS,CAACc,YAAf;AACE,+BAAYH,KAAZ,EAAsB;AAAET,QAAAA,iBAAiB,EAAE,IAArB;AAA2BC,QAAAA,IAAI,EAAES,MAAM,CAACG;AAAxC,OAAtB;;AACF,SAAKf,SAAS,CAACgB,QAAf;AACE,+BAAYL,KAAZ;AAAmBL,QAAAA,IAAI,+BAAMK,KAAK,CAACL,IAAZ,sBAAqBM,MAAM,CAACG,OAA5B;AAAvB;;AACF,SAAKf,SAAS,CAACiB,aAAf;AACE,+BAAYN,KAAZ;AAAmBJ,QAAAA,UAAU,EAAE;AAA/B;;AACF,SAAKP,SAAS,CAACkB,cAAf;AACE,+BAAYP,KAAZ;AAAmBJ,QAAAA,UAAU,EAAE,KAA/B;AAAsCC,QAAAA,WAAW,EAAE;AAAnD;;AACF,SAAKR,SAAS,CAACmB,aAAf;AACE,+BACKR,KADL;AACYJ,QAAAA,UAAU,EAAG,KADzB;AACgCC,QAAAA,WAAW,EAAE,IAD7C;AACmDC,QAAAA,UAAU,EAAGG,MAAM,CAACG;AADvE;;AAGF,SAAKf,SAAS,CAACoB,WAAf;AACE,aAAOT,KAAP;;AACF,SAAKX,SAAS,CAACqB,QAAf;AAAA,UACUN,OADV,GACsBH,MADtB,CACUG,OADV;AAEE,UAAMO,OAAO,GAAGX,KAAK,CAACL,IAAN,CAAWiB,KAAX,EAAhB;AACA,UAAMC,MAAM,GAAGF,OAAO,CAACG,IAAR,CAAa,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,IAAF,KAAWZ,OAAO,CAACa,UAAvB;AAAA,OAAd,CAAf;AACA,UAAMC,KAAK,GAAGP,OAAO,CAACQ,OAAR,CAAgBN,MAAhB,CAAd,CAJF,CAKE;AACA;AACA;;AACAA,MAAAA,MAAM,CAACT,OAAO,CAACgB,IAAT,CAAN,GAAuBhB,OAAO,CAACiB,GAA/B;AACAV,MAAAA,OAAO,CAACO,KAAD,CAAP,GAAiBL,MAAjB;AACA,+BAAYb,KAAZ;AAAmBL,QAAAA,IAAI,EAAEgB;AAAzB;;AACF;AACE,aAAOX,KAAP;AA3BJ;AA6BD,CA9BD;;AAgCA,eAAeD,WAAf","sourcesContent":["import { constants } from \"./actions\";\r\n\r\nconst initialState = {\r\n  isAuthentificated: false,\r\n  user:              { login: \"\", password: \"\" },\r\n  data:              [],\r\n  isFetching:        false,\r\n  dataFetched:       false,\r\n  fetchError:        null\r\n};\r\n\r\nconst mainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case constants.AUTHENTICATE:\r\n      return { ...state, ...{ isAuthentificated: true, user: action.payload } };\r\n    case constants.SET_DATA:\r\n      return { ...state, data: [...state.data, ...action.payload] };\r\n    case constants.START_LOADING:\r\n      return { ...state, isFetching: true };\r\n    case constants.FINISH_LOADING:\r\n      return { ...state, isFetching: false, dataFetched: true };\r\n    case constants.LOADING_ERROR:\r\n      return {\r\n        ...state, isFetching:  false, dataFetched: true, fetchError:  action.payload\r\n      };\r\n    case constants.FETCH_PROPS:\r\n      return state;\r\n    case constants.SET_PROP:\r\n      const { payload } = action;\r\n      const persons = state.data.slice();\r\n      const person = persons.find(e => e.name === payload.personName);\r\n      const index = persons.indexOf(person);\r\n      // if (!person.hasOwnProperty(payload.prop)) {\r\n      //   return state;\r\n      // }\r\n      person[payload.prop] = payload.val;\r\n      persons[index] = person;\r\n      return { ...state, data: persons };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default mainReducer;\r\n"]},"metadata":{},"sourceType":"module"}